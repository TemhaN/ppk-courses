@page
@model web.Pages.AttendanceModel
@{
    ViewData["Title"] = "Посещаемость";
}

<section class="max-w-7xl mx-auto py-8 px-4 text-gray-900 animate-fadeIn">
    <h2 class="text-3xl font-semibold mb-6">Посещаемость</h2>

    @if (TempData["Error"] != null)
    {
        <div class="bg-red-500 border border-red-600 text-white px-4 py-3 rounded-lg mb-6 shadow-md" role="alert">
            @TempData["Error"]
        </div>
    }
    @if (TempData["Success"] != null)
    {
        <div class="bg-green-500 border border-green-600 text-white px-4 py-3 rounded-lg mb-6 shadow-md" role="alert">
            @TempData["Success"]
        </div>
    }

    @if (Model.IsTeacher)
    {
        <div class="bg-white rounded-lg p-6 mb-8 shadow-lg">
            <h3 class="text-xl font-semibold mb-4">Отметить посещаемость</h3>
            @if (Model.Students.Any())
            {
                <form method="post" asp-page-handler="MarkAttendance" class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div>
                        <label class="block text-sm font-medium mb-1">Расписание</label>
                        <select name="ScheduleId" class="w-full border-gray-300 rounded-md p-2 bg-gray-100 text-gray-900 focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required>
                            <option value="">Выберите занятие</option>
                            @foreach (var schedule in Model.Schedules)
                            {
                                <option value="@schedule.Id">@schedule.Course?.CourseName - @schedule.Date.ToString("dd.MM.yyyy") @schedule.Time.ToString(@"hh\:mm")</option>
                            }
                        </select>
                    </div>
                    <div>
                        <label class="block text-sm font-medium mb-1">Студент</label>
                        <select name="UserId" class="w-full border-gray-300 rounded-md p-2 bg-gray-100 text-gray-900 focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required>
                            <option value="">Выберите студента</option>
                            @foreach (var student in Model.Students)
                            {
                                <option value="@student.Id">@student.FullName</option>
                            }
                        </select>
                    </div>
                    <div>
                        <label class="block text-sm font-medium mb-1">Присутствие</label>
                        <select name="IsPresent" class="w-full border-gray-300 rounded-md p-2 bg-gray-100 text-gray-900 focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required>
                            <option value="true">Присутствовал</option>
                            <option value="false">Отсутствовал</option>
                        </select>
                    </div>
                    <div class="md:col-span-3">
                        <button type="submit" class="bg-blue-500 text-white py-2 px-6 rounded-lg hover:bg-blue-600 transition-colors hover:-translate-y-0.5 shadow-md">Отметить</button>
                    </div>
                </form>
            }
            else
            {
                <p class="text-gray-600">Нет студентов, записанных на ваши занятия.</p>
            }
        </div>
    }

    <div class="bg-white rounded-lg p-6 shadow-lg">
        <h3 class="text-xl font-semibold mb-4">Статистика посещаемости</h3>
        <div class="flex flex-col md:flex-row md:gap-6">
            <div class="md:w-2/3">
                @if (Model.Attendances.Any())
                {
                    <div class="overflow-x-auto mt-6">
                        <table class="w-full bg-white rounded-lg text-gray-900">
                            <thead class="bg-gray-100">
                                <tr>
                                    <th class="py-3 px-4 text-left">Студент</th>
                                    <th class="py-3 px-4 text-left">Курс</th>
                                    <th class="py-3 px-4 text-left">Дата</th>
                                    <th class="py-3 px-4 text-left">Статус</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var attendance in Model.Attendances)
                                {
                                    <tr class="border-b border-gray-200 hover:bg-gray-100 transition-colors">
                                        <td class="py-3 px-4">@attendance.User?.FullName</td>
                                        <td class="py-3 px-4">@attendance.Schedule?.Course?.CourseName</td>
                                        <td class="py-3 px-4">@attendance.Date.ToString("dd.MM.yyyy")</td>
                                        <td class="py-3 px-4">@(attendance.IsPresent ? "Присутствовал" : "Отсутствовал")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <p class="text-gray-600">Записей о посещаемости нет.</p>
                }
            </div>
            <div class="md:w-1/3 mt-6 md:mt-0">
                @if (Model.AttendanceStats != null && Model.AttendanceStats.Total > 0)
                {
                    <div class="chart-container">
                        <canvas id="attendanceChart" width="200" height="200"></canvas>
                    </div>
                }
                else
                {
                    <p class="text-gray-600">Нет данных для статистики.</p>
                }
            </div>
        </div>
    </div>
</section>

<style>
    .animate-fadeIn {
        animation: fadeIn 0.5s ease-in;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .chart-container {
        max-width: 250px;
        margin-left: auto;
        margin-right: auto;
    }

    canvas#attendanceChart {
        max-width: 100%;
        max-height: 100%;
    }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.2/dist/chart.umd.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var stats = @Json.Serialize(Model.AttendanceStats);
            if (stats && stats.total > 0) {
                var ctx = document.getElementById('attendanceChart').getContext('2d');
                new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: ['Присутствовал', 'Отсутствовал'],
                        datasets: [{
                            data: [stats.present, stats.absent],
                            backgroundColor: ['#22c55e', '#ef4444'],
                            borderColor: ['#1e3a8a', '#1e3a8a'],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: true,
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: {
                                    color: '#374151',
                                    font: {
                                        size: 12
                                    }
                                }
                            },
                            tooltip: {
                                callbacks: {
                                    label: function (context) {
                                        var label = context.label || '';
                                        var value = context.parsed;
                                        var total = stats.total;
                                        var percentage = ((value / total) * 100).toFixed(1);
                                        return `${label}: ${value} (${percentage}%)`;
                                    }
                                }
                            }
                        }
                    }
                });
            }
        });
    </script>
}