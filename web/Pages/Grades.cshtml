@page
@model web.Pages.GradesModel
@{
    ViewData["Title"] = "Оценки";
}

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="min-h-screen bg-white font-inter text-gray-900">
    <main class="max-w-7xl mx-auto py-12 px-4">
        <!-- Notifications -->
        @if (TempData["Error"] != null)
        {
            <div class="fixed top-4 right-4 bg-red-500 text-white px-4 py-3 rounded-lg shadow-lg max-w-sm">
                @TempData["Error"]
            </div>
        }
        @if (TempData["Success"] != null)
        {
            <div class="fixed top-4 right-4 bg-green-500 text-white px-4 py-3 rounded-lg shadow-lg max-w-sm">
                @TempData["Success"]
            </div>
        }

        <!-- Header -->
        <div class="flex items-center mb-6">
            <svg class="w-8 h-8 text-blue-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <h2 class="text-3xl font-bold text-gray-900">Оценки</h2>
        </div>

        <!-- Add Grade Form (for Teachers) -->
        @if (Model.IsTeacher)
        {
            <section class="bg-gray-100 rounded-xl shadow-2xl p-6 mb-6">
                <h3 class="text-xl font-semibold text-gray-900 mb-4">Поставить оценку</h3>
                <form method="post" asp-page-handler="AddGrade" class="grid grid-cols-1 sm:grid-cols-3 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-600 mb-2">Курс</label>
                        <div class="relative">
                            <svg class="w-5 h-5 text-gray-500 absolute left-3 top-1/2 transform -translate-y-1/2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5s3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18s-3.332.477-4.5 1.253"></path>
                            </svg>
                            <select name="CourseId" id="courseSelect" class="w-full pl-10 pr-4 py-3 rounded-lg bg-gray-200 border-0 text-gray-900 focus:ring-2 focus:ring-blue-500 focus:outline-none" required>
                                <option value="">Выберите курс</option>
                                @foreach (var course in Model.Courses)
                                {
                                    <option value="@course.Id">@course.CourseName</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-600 mb-2">Студент</label>
                        <div class="relative">
                            <svg class="w-5 h-5 text-gray-500 absolute left-3 top-1/2 transform -translate-y-1/2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                            </svg>
                            <select name="UserId" id="studentSelect" class="w-full pl-10 pr-4 py-3 rounded-lg bg-gray-200 border-0 text-gray-900 focus:ring-2 focus:ring-blue-500 focus:outline-none" required>
                                <option value="">Выберите студента</option>
                                @foreach (var user in Model.Students)
                                {
                                    <option value="@user.Id" data-course-ids="@string.Join(",", Model.StudentCourseIds.ContainsKey(user.Id) ? Model.StudentCourseIds[user.Id] : new List<int>())">@user.FullName</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-600 mb-2">Оценка</label>
                        <div class="relative">
                            <svg class="w-5 h-5 text-gray-500 absolute left-3 top-1/2 transform -translate-y-1/2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15.828a2 2 0 01-2.828 0l-1.414-1.414a2 2 0 010-2.828L10.586 8.586a2 2 0 012.828 0l1.414 1.414z"></path>
                            </svg>
                            <input type="number" name="Score" min="0" max="100" class="w-full pl-10 pr-4 py-3 rounded-lg bg-gray-200 border-0 text-gray-900 focus:ring-2 focus:ring-blue-500 focus:outline-none" required placeholder="0-100" />
                        </div>
                    </div>
                    <div class="sm:col-span-3 text-center">
                        <button type="submit" class="bg-blue-500 text-white py-3 px-6 rounded-lg shadow-md flex items-center justify-center mx-auto hover:bg-blue-600 hover:-translate-y-0.5 transition-all duration-300">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                            </svg>
                            Поставить оценку
                        </button>
                        @Html.AntiForgeryToken()
                    </div>
                </form>
            </section>
        }

        <!-- Grades Table -->
        <section class="bg-gray-100 rounded-xl shadow-2xl p-6">
            <h3 class="text-xl font-semibold text-gray-900 mb-4">@(Model.IsTeacher ? "Поставленные оценки" : "Мои оценки")</h3>
            @if (Model.Grades.Any())
            {
                <div class="overflow-x-auto">
                    <table class="w-full bg-gray-100 rounded-lg">
                        <thead class="bg-gray-200">
                            <tr>
                                @if (Model.IsTeacher)
                                {
                                    <th class="py-3 px-4 text-left text-blue-500">Студент</th>
                                }
                                <th class="py-3 px-4 text-left text-blue-500">Курс</th>
                                <th class="py-3 px-4 text-left text-blue-500">Оценка</th>
                                <th class="py-3 px-4 text-left text-blue-500">Дата</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var grade in Model.Grades)
                            {
                                <tr class="border-b border-gray-300">
                                    @if (Model.IsTeacher)
                                    {
                                        <td class="py-3 px-4 text-gray-600">@(grade.User?.FullName ?? "Не указан")</td>
                                    }
                                    <td class="py-3 px-4 text-gray-600">@(grade.Course?.CourseName ?? "Не указан")</td>
                                    <td class="py-3 px-4 text-gray-600">@grade.Score</td>
                                    <td class="py-3 px-4 text-gray-600">@grade.DateAssigned.ToString("dd.MM.yyyy")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <p class="text-gray-600 text-center">@(Model.IsTeacher ? "Вы ещё не поставили оценок." : "Оценок пока нет.")</p>
            }
        </section>
    </main>

    @if (Model.IsTeacher)
    {
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const courseSelect = document.getElementById('courseSelect');
                const studentSelect = document.getElementById('studentSelect');
                const allOptions = Array.from(studentSelect.options).slice(1); // Skip placeholder

                courseSelect.addEventListener('change', function () {
                    const selectedCourseId = this.value;
                    studentSelect.innerHTML = '<option value="">Выберите студента</option>';

                    if (selectedCourseId) {
                        allOptions.forEach(option => {
                            const courseIds = option.getAttribute('data-course-ids').split(',');
                            if (courseIds.includes(selectedCourseId)) {
                                studentSelect.appendChild(option.cloneNode(true));
                            }
                        });
                    } else {
                        allOptions.forEach(option => studentSelect.appendChild(option.cloneNode(true)));
                    }
                });
            });
        </script>
    }
</body>
</html>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}